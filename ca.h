#if !defined(AFX_CA_H__8E89743F_2CF0_4B04_9F87_85EE6B43F8E6__INCLUDED_)
#define AFX_CA_H__8E89743F_2CF0_4B04_9F87_85EE6B43F8E6__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CProbes;
class COutputProbes;
class CMemory;
class CProbe;

/////////////////////////////////////////////////////////////////////////////
// CCa wrapper class

class CCa : public COleDispatchDriver
{
public:
	CCa() {}		// Calls COleDispatchDriver default constructor
	CCa(LPDISPATCH pDispatch) : COleDispatchDriver(pDispatch) {}
	CCa(const CCa& dispatchSrc) : COleDispatchDriver(dispatchSrc) {}

// Attributes
public:

// Operations
public:
	CProbes GetProbes();
	COutputProbes GetOutputProbes();
	CMemory GetMemory();
	CString GetDisplayProbe();
	void SetDisplayProbe(LPCTSTR lpszNewValue);
	CProbe GetSingleProbe();
	float GetSyncMode();
	void SetSyncMode(float newValue);
	long GetDisplayMode();
	void SetDisplayMode(long nNewValue);
	long GetDisplayDigits();
	void SetDisplayDigits(long nNewValue);
	long GetAveragingMode();
	void SetAveragingMode(long nNewValue);
	long GetBrightnessUnit();
	void SetBrightnessUnit(long nNewValue);
	CString GetCAType();
	CString GetCAVersion();
	long GetNumber();
	CString GetPortID();
	CString GetId();
	void SetId(LPCTSTR lpszNewValue);
	void CalZero();
	void Measure(long newVal);
	void SetAnalyzerCalMode();
	void Enter();
	void SetAnalogRange(float Range1Val, float Range2Val);
	void SetPWROnStatus();
	long GetCalStandard();
	void SetCalStandard(long nNewValue);
	void ResetAnalyzerCalMode();
	void SetLvxyCalMode();
	void ResetLvxyCalMode();
	void SetAnalyzerCalData(long ColorVal);
	void SetDisplayProbe(long ProbeNumberVal);
	void SetLvxyCalData(long ColorVal, float XVal, float YVal, float LvVal);
	void SetRemoteMode(long nNewValue);
	void SetFMAAnalogRange(float RangeVal);
	void GetAnalogRange(float* Range1Val, float* Range2Val);
	void GetFMAAnalogRange(float* RangeVal);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CA_H__8E89743F_2CF0_4B04_9F87_85EE6B43F8E6__INCLUDED_)
