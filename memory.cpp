// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "memory.h"


/////////////////////////////////////////////////////////////////////////////
// CMemory properties

/////////////////////////////////////////////////////////////////////////////
// CMemory operations

long CMemory::GetChannelNO()
{
	long result;
	InvokeHelper(0x1, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

void CMemory::SetChannelNO(long nNewValue)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x1, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nNewValue);
}

CString CMemory::GetChannelID()
{
	CString result;
	InvokeHelper(0x2, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
	return result;
}

void CMemory::SetID(LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x2, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 lpszNewValue);
}

void CMemory::GetReferenceColor(LPCTSTR ProbeIDVal, float* XVal, float* YVal, float* LvVal)
{
	static BYTE parms[] =
		VTS_BSTR VTS_PR4 VTS_PR4 VTS_PR4;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ProbeIDVal, XVal, YVal, LvVal);
}

void CMemory::SetChannelID(LPCTSTR ChannelIDVal)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ChannelIDVal);
}

void CMemory::GetMemoryStatus(long ProbeNOVal, long* CalProbeSNOVal, long* RefProbeSNOVal, long* CalModeVal)
{
	static BYTE parms[] =
		VTS_I4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ProbeNOVal, CalProbeSNOVal, RefProbeSNOVal, CalModeVal);
}

long CMemory::CheckCalData(long ProbeNOVal, LPCTSTR FileNameVal)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ProbeNOVal, FileNameVal);
	return result;
}

void CMemory::CopyToFile(long ProbeNOVal, LPCTSTR FileNameVal)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ProbeNOVal, FileNameVal);
}

void CMemory::CopyFromFile(long ProbeNOVal, LPCTSTR FileNameVal)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ProbeNOVal, FileNameVal);
}
